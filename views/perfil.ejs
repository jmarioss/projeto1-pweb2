<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Perfil do Usuário</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        .skill-level {
            width: 100px;
        }
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .profile-container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            margin-bottom: 20px;
        }
        .info-section {
            margin-bottom: 30px;
        }
        .info-section h2 {
            color: #007bff;
            margin-bottom: 15px;
        }
        .info-item {
            margin-bottom: 10px;
        }
        .info-label {
            font-weight: bold;
            margin-right: 10px;
        }
        .button-container {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-size: 14px;
        }
        .button:hover {
            background-color: #0056b3;
        }
        .admin-section {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 2px solid #eee;
        }
        .admin-section h2 {
            color: #dc3545;
            margin-bottom: 15px;
        }
        .logout-button {
            background-color: #dc3545;
        }
        .logout-button:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Perfil do Usuário</h1>
        <div class="card mt-4">
            <div class="card-body">
                <h5>Nome: <%= usuario?.nome_usuario || "Não informado" %></h5>
                <h5>Email: <%= usuario?.email || "Não informado" %></h5>
            </div>
        </div>

        <!-- Seção de Conhecimentos -->
        <div class="mt-5">
            <div class="d-flex justify-content-between align-items-center">
                <h3>Conhecimentos</h3>
                <button class="btn btn-primary" onclick="mostrarModalConhecimento()">Adicionar Conhecimento</button>
            </div>
            
            <div class="table-responsive mt-3">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Conhecimento</th>
                            <th>Nível</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (conhecimentos && conhecimentos.length > 0) { %>
                            <% conhecimentos.forEach(conhecimento => { %>
                                <tr>
                                    <td><%= conhecimento.nome %></td>
                                    <td>
                                        <span id="nivel-atual-<%= conhecimento.id_conhecimento %>" class="me-2">Nível atual: <%= conhecimento.nivel %></span>
                                        <select class="form-select skill-level" 
                                                onchange="atualizarNivelConhecimento('<%= conhecimento.id_conhecimento %>', this.value)">
                                            <% for(let i = 1; i <= 10; i++) { %>
                                                <option value="<%= i %>" <%= conhecimento.nivel == i ? 'selected' : '' %>><%= i %></option>
                                            <% } %>
                                        </select>
                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm" onclick="excluirConhecimento('<%= conhecimento.id_conhecimento %>')">
                                            Excluir
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="3" class="text-center">Nenhum conhecimento cadastrado</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Seção de Projetos -->
        <div class="mt-5">
            <div class="d-flex justify-content-between align-items-center">
                <h3>Projetos</h3>
                <button class="btn btn-success" onclick="cadastrarProjeto()">Novo Projeto</button>
            </div>
            
            <div class="row mt-3">
                <% if (projetos && projetos.length > 0) { %>
                    <% projetos.forEach(projeto => { %>
                        <div class="col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h5 class="card-title"><%= projeto.nome_projeto %></h5>
                                    <p class="card-text"><%= projeto.resumo_projeto %></p>
                                    <% if (projeto.link_externo) { %>
                                        <p><a href="<%= projeto.link_externo %>" target="_blank" class="btn btn-link p-0">Link do Projeto</a></p>
                                    <% } %>
                                    
                                    <div class="mt-3">
                                        <button class="btn btn-warning btn-sm" onclick="editarProjeto('<%= projeto.id_projeto %>')">
                                            Editar
                                        </button>
                                        <button class="btn btn-info btn-sm" onclick="mostrarModalParticipante('<%= projeto.id_projeto %>')">
                                            Adicionar Participante
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="excluirProjeto('<%= projeto.id_projeto %>')">
                                            Excluir
                                        </button>
                                    </div>

                                    <% if (projeto.Usuarios && projeto.Usuarios.length > 0) { %>
                                        <div class="mt-3">
                                            <h6>Participantes:</h6>
                                            <ul class="list-unstyled">
                                                <% projeto.Usuarios.forEach(participante => { %>
                                                    <li class="d-flex justify-content-between align-items-center">
                                                        <%= participante.email %>
                                                        <button class="btn btn-danger btn-sm" 
                                                                onclick="removerParticipante('<%= projeto.id_projeto %>', '<%= participante.id_usuario %>')">
                                                            Remover
                                                        </button>
                                                    </li>
                                                <% }) %>
                                            </ul>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="col-12">
                        <p>Nenhum projeto cadastrado.</p>
                    </div>
                <% } %>
            </div>
        </div>

        <div class="button-container">
            <button type="button" class="button" data-bs-toggle="modal" data-bs-target="#modalNovoProjeto">
                Criar Novo Projeto
            </button>
            <a href="/projetos" class="button">Ver Todos os Projetos</a>
            
            <% if (usuario.id_usuario === 1) { %>
                <div class="admin-section">
                    <h2>Opções de Administrador</h2>
                    <div class="d-flex gap-2">
                        <a href="/admin/usuarios/cadastro" class="button">Cadastrar Usuário</a>
                        <a href="/admin/conhecimentos/cadastro" class="button">Cadastrar Conhecimento</a>
                        <a href="/admin/palavras-chave/cadastro" class="button">Cadastrar Palavra-chave</a>
                    </div>
                </div>
            <% } %>

            <form action="/logout" method="POST" style="margin-left: auto;">
                <button type="submit" class="button logout-button">Sair</button>
            </form>
        </div>
    </div>

    <!-- Modal de Conhecimento -->
    <div class="modal fade" id="modalConhecimento" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Adicionar Conhecimento</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formConhecimento">
                        <div class="mb-3">
                            <label class="form-label">Conhecimento</label>
                            <select class="form-select" id="nomeConhecimento" required>
                                <option value="">Selecione um conhecimento</option>
                                <% todosConhecimentos.forEach(conhecimento => { %>
                                    <option value="<%= conhecimento.nome %>"><%= conhecimento.nome %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nível (1-10)</label>
                            <select class="form-select" id="nivelConhecimento" required>
                                <% for(let i = 1; i <= 10; i++) { %>
                                    <option value="<%= i %>"><%= i %></option>
                                <% } %>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="salvarConhecimento()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Projeto -->
    <div class="modal fade" id="modalProjeto" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Projeto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formProjeto">
                        <input type="hidden" id="projetoId">
                        <div class="mb-3">
                            <label class="form-label">Nome do Projeto</label>
                            <input type="text" class="form-control" id="nomeProjeto" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Resumo</label>
                            <textarea class="form-control" id="resumoProjeto" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Link Externo</label>
                            <input type="url" class="form-control" id="linkExterno">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="salvarProjeto()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Participante -->
    <div class="modal fade" id="modalParticipante" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Adicionar Participante</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formParticipante">
                        <input type="hidden" id="projetoParticipanteId">
                        <div class="mb-3">
                            <label class="form-label">Email do Participante</label>
                            <input type="email" class="form-control" id="emailParticipante" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="adicionarParticipante()">Adicionar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Novo Projeto -->
    <div class="modal fade" id="modalNovoProjeto" tabindex="-1" aria-labelledby="modalNovoProjetoLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalNovoProjetoLabel">Criar Novo Projeto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="formNovoProjeto">
                        <div class="mb-3">
                            <label for="nome_projeto" class="form-label">Nome do Projeto</label>
                            <input type="text" class="form-control" id="nome_projeto" name="nome_projeto" required>
                        </div>
                        <div class="mb-3">
                            <label for="resumo_projeto" class="form-label">Resumo</label>
                            <textarea class="form-control" id="resumo_projeto" name="resumo_projeto" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="link_externo" class="form-label">Link Externo</label>
                            <input type="url" class="form-control" id="link_externo" name="link_externo">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="criarProjeto()">Criar</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Funções para gerenciar conhecimentos
        function mostrarModalConhecimento() {
            document.getElementById('formConhecimento').reset();
            new bootstrap.Modal(document.getElementById('modalConhecimento')).show();
        }

        function salvarConhecimento() {
            const nome = document.getElementById('nomeConhecimento').value;
            const nivel = document.getElementById('nivelConhecimento').value;

            fetch(`/usuario/<%= usuario.id_usuario %>/conhecimento`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify({ 
                    nome_conhecimento: nome,
                    nivel: nivel 
                })
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    response.json().then(data => {
                        alert(data.error || 'Erro ao salvar conhecimento');
                    });
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao salvar conhecimento');
            });

            // Fecha o modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('modalConhecimento'));
            if (modal) {
                modal.hide();
            }
        }

        function atualizarNivelConhecimento(conhecimentoId, nivel) {
            fetch(`/usuario/<%= usuario.id_usuario %>/conhecimento/${conhecimentoId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify({ nivel: nivel })
            })
            .then(response => {
                if (response.ok) {
                    // Atualiza o texto do nível atual
                    const nivelSpan = document.querySelector(`#nivel-atual-${conhecimentoId}`);
                    if (nivelSpan) {
                        nivelSpan.textContent = `Nível atual: ${nivel}`;
                    }
                } else {
                    alert('Erro ao atualizar nível');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao atualizar nível');
            });
        }

        function excluirConhecimento(conhecimentoId) {
            if (confirm('Tem certeza que deseja excluir este conhecimento?')) {
                fetch(`/usuario/<%= usuario.id_usuario %>/conhecimento/${conhecimentoId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        response.json().then(data => {
                            alert(data.error || 'Erro ao excluir conhecimento');
                        });
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao excluir conhecimento');
                });
            }
        }

        // Funções para gerenciar projetos
        function cadastrarProjeto() {
            document.getElementById('formProjeto').reset();
            document.getElementById('projetoId').value = '';
            new bootstrap.Modal(document.getElementById('modalProjeto')).show();
        }

        function editarProjeto(projetoId) {
            fetch(`/usuario/<%= usuario.id_usuario %>/projeto/${projetoId}`)
                .then(response => response.json())
                .then(projeto => {
                    document.getElementById('projetoId').value = projeto.id_projeto;
                    document.getElementById('nomeProjeto').value = projeto.nome_projeto;
                    document.getElementById('resumoProjeto').value = projeto.resumo_projeto;
                    document.getElementById('linkExterno').value = projeto.link_externo || '';
                    
                    const modal = new bootstrap.Modal(document.getElementById('modalProjeto'));
                    modal.show();
                })
                .catch(error => {
                    console.error('Erro ao carregar projeto:', error);
                    alert('Erro ao carregar dados do projeto');
                });
        }

        function salvarProjeto() {
            const projetoId = document.getElementById('projetoId').value;
            const nome = document.getElementById('nomeProjeto').value;
            const resumo = document.getElementById('resumoProjeto').value;
            const link = document.getElementById('linkExterno').value;

            const method = projetoId ? 'PUT' : 'POST';
            const url = projetoId 
                ? `/usuario/<%= usuario.id_usuario %>/projeto/${projetoId}`
                : `/usuario/<%= usuario.id_usuario %>/projeto`;

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify({
                    nome_projeto: nome,
                    resumo_projeto: resumo,
                    link_externo: link
                })
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Erro ao salvar projeto');
                }
            });
        }

        function excluirProjeto(projetoId) {
            if (confirm('Tem certeza que deseja excluir este projeto?')) {
                fetch(`/usuario/<%= usuario.id_usuario %>/projeto/${projetoId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Erro ao excluir projeto');
                    }
                });
            }
        }

        // Funções para gerenciar participantes
        function mostrarModalParticipante(projetoId) {
            document.getElementById('formParticipante').reset();
            document.getElementById('projetoParticipanteId').value = projetoId;
            new bootstrap.Modal(document.getElementById('modalParticipante')).show();
        }

        function adicionarParticipante() {
            const projetoId = document.getElementById('projetoParticipanteId').value;
            const email = document.getElementById('emailParticipante').value;

            fetch(`/usuario/projeto/${projetoId}/add-pessoa`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify({ email })
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Erro ao adicionar participante');
                }
            });
        }

        function removerParticipante(projetoId, participanteId) {
            if (confirm('Tem certeza que deseja remover este participante?')) {
                fetch(`/usuario/projeto/${projetoId}/remove-pessoa/${participanteId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Erro ao remover participante');
                    }
                });
            }
        }

        function criarProjeto() {
            const formData = {
                nome_projeto: document.getElementById('nome_projeto').value,
                resumo_projeto: document.getElementById('resumo_projeto').value,
                link_externo: document.getElementById('link_externo').value
            };

            fetch('/projeto/new/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('token')}`
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    response.json().then(data => {
                        alert(data.error || 'Erro ao criar projeto');
                    });
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao criar projeto');
            });

            // Fecha o modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('modalNovoProjeto'));
            if (modal) {
                modal.hide();
            }
        }
    </script>
</body>
</html>
